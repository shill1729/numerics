% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrators.R
\name{monte_carlo_integrator}
\alias{monte_carlo_integrator}
\title{One dimensional Monte-Carlo integration}
\usage{
monte_carlo_integrator(
  g,
  a = 0,
  b = 1,
  naive = FALSE,
  n = 10^6,
  sig_lvl = 0.05,
  ...
)
}
\arguments{
\item{g}{the known function to integrate over a given interval}

\item{a}{(finite) left endpoint of the given interval}

\item{b}{(finite) right endpoint of the given interval}

\item{naive}{boolean whether to naive estimate or efficient estimator, see details.}

\item{n}{number of variates to simulate}

\item{sig_lvl}{significance level of confidence intervals}

\item{...}{additional arguments to pass to the function \code{g}; must be named}
}
\value{
data.frame containing
\itemize{
\item \code{estimate} the point estimate of the integral,
\item \code{lb} the lower bound of the confidence interval,
\item \code{ub} the upper bound of the confidence interval,
\item \code{std_error} the standard error of the point-estimate. }
}
\description{
{One dimensional integrals over an interval can be approximated
via sample means of (functions of) uniformly distributed random variables, via
the SLLN and error estimates can be obtained via CLT. This naive approach is
not ideal for multi-dimensional integrals, however. The integrand must be known.}
}
\details{
{The naive estimate computes the sample mean of \eqn{g(U)} over an IID sample
of uniformly distributed RVs, \eqn{U_1,...,U_n} while
the efficient estimator uses the sample mean of \eqn{0.5(g(U)+g(a+b-U))}, which
can be shown to have a lower variance than the aforementioned.}
}
\examples{
# Sophomore's dream: value to 10 decimals is 0.7834305107...
monte_carlo_integrator(function(x) x^x, 0, 1)
# Integral related to gamma function: exact value is Gamma(p+1), here p = 2
monte_carlo_integrator(function(x) log(1/x)^2, 0, 1)
}
